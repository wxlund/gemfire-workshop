<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:gfe="http://www.springframework.org/schema/gemfire"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/gemfire http://www.springframework.org/schema/gemfire/spring-gemfire.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	<context:component-scan base-package="demo.pivotal.dao" />
	<context:component-scan base-package="demo.pivotal.datasync" />

	<!-- Generic properties that we can set, such as where to store data and 
		log files -->
	<context:property-placeholder
		system-properties-mode="OVERRIDE" location="classpath:/common.properties" />

	<!-- when we run multiple cache servers on the same node, we need unique 
		server ports -->
	<bean id="portGenerator" class="demo.pivotal.util.ServerPortGenerator" />

	<!-- create a unique directory base directory for this node -->
	<bean id="findDiskDir" class="demo.pivotal.util.PersistenceDirectoryGenerator"
		destroy-method="unlock" init-method="findDirectory">
		<property name="parent" value="${data.location}" />
	</bean>

	<bean id="cache-logger" class="demo.pivotal.util.CacheLogger" />

	<!-- gemfire base cache configuration -->
	<gfe:cache id="cache" properties-ref="props"
		cache-xml-location="classpath:cache-server.xml" />

	<!-- this makes the cache server become a 'server' in the grid -->
	<gfe:cache-server id="advanced-config" auto-startup="true"
		cache-ref="cache" port="#{portGenerator.generatePort()}" />
		
	<!-- A persistent disk store to use when storing data for persistence, overflow, 
		etc. -->
	<gfe:disk-store id="localStore" max-oplog-size="10"
		cache-ref="cache">
		<gfe:disk-dir location="#{findDiskDir.getSelected().getAbsolutePath()}"
			max-size="10" />
	</gfe:disk-store>

	<!-- GEMFIRE REGION DEFINITIONS -->
	<gfe:partitioned-region id="RESORT_REPL" copies="1"
		cache-ref="cache">
		<gfe:cache-listener ref="cache-logger" />
		<gfe:gateway-sender-ref bean="gateway-sender"/>
	</gfe:partitioned-region>

	<bean id="gtResortRepl" class="org.springframework.data.gemfire.GemfireTemplate"
		p:region-ref="RESORT_REPL" />

	<beans profile="site1">
		<!-- gemfire.properties file for the cache server -->
		<bean id="props"
			class="org.springframework.beans.factory.config.PropertiesFactoryBean">
			<property name="locations">
				<list>
					<value>classpath:gemfire-server.properties</value>
				</list>
			</property>
			<property name="properties">
				<props>
					<prop key="locators">${locator.host1}[${locator.port1}],${locator.host2}[${locator.port2}]</prop>
				</props>
			</property>
		</bean>

		<!-- WAN -->
		<!-- The event sender to send to remote systems -->
		<gfe:gateway-sender id="gateway-sender" cache-ref="cache"
			remote-distributed-system-id="2" batch-size="1000" persistent="true"
			disk-store-ref="localStore" maximum-queue-memory="32"
			enable-batch-conflation="true" />
	
		<!-- The receiver for remote events -->
		<gfe:gateway-receiver id="gateway-receiver"
			cache-ref="cache" start-port="30000" end-port="31999" />
	</beans>
	
	<beans profile="site2">
		<!-- gemfire.properties file for the cache server -->
		<bean id="props"
			class="org.springframework.beans.factory.config.PropertiesFactoryBean">
			<property name="locations">
				<list>
					<value>classpath:gemfire-server.properties</value>
				</list>
			</property>
			<property name="properties">
				<props>
					<prop key="locators">${locator2.host1}[${locator2.port1}],${locator2.host2}[${locator2.port2}]</prop>
				</props>
			</property>
		</bean>

		<!-- WAN -->
		<!-- The event sender to send to remote systems -->
		<gfe:gateway-sender id="gateway-sender" cache-ref="cache"
			remote-distributed-system-id="1" batch-size="1000" persistent="true"
			disk-store-ref="localStore" maximum-queue-memory="32"
			enable-batch-conflation="true" />
	
		<!-- The receiver for remote events -->
		<gfe:gateway-receiver id="gateway-receiver"
			cache-ref="cache" start-port="32000" end-port="33999" />
	</beans>	
		
</beans>