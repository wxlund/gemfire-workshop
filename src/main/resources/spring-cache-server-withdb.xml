<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:gfe="http://www.springframework.org/schema/gemfire"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/gemfire http://www.springframework.org/schema/gemfire/spring-gemfire.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd">

	<context:component-scan base-package="demo.pivotal.dao" />
	<context:component-scan base-package="demo.pivotal.datasync" />

	<!-- Generic properties that we can set, such as where to store data and 
		log files -->
	<context:property-placeholder
		system-properties-mode="OVERRIDE" location="classpath:/common.properties" />

	<!-- gemfire.properties file for the cache server -->
	<bean id="props"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:gemfire-server.properties</value>
			</list>
		</property>
		<property name="properties">
			<value>locators=${locator.host1}[${locator.port1}],${locator.host2}[${locator.port2}]
			</value>
		</property>
	</bean>

	<!-- when we run multiple cache servers on the same node, we need unique 
		server ports -->
	<bean id="portGenerator" class="demo.pivotal.util.ServerPortGenerator" />

	<!-- create a unique directory base directory for this node -->
	<bean id="findDiskDir" class="demo.pivotal.util.PersistenceDirectoryGenerator"
		destroy-method="unlock" init-method="findDirectory">
		<property name="parent" value="${data.location}" />
	</bean>

	<!-- A persistent disk store to use when storing data for persistence, overflow, 
		etc. -->
	<gfe:disk-store id="localStore" max-oplog-size="10"
		cache-ref="cache">
		<gfe:disk-dir location="#{findDiskDir.getSelected().getAbsolutePath()}"
			max-size="10" />
	</gfe:disk-store>

	<bean id="cache-logger" class="demo.pivotal.util.CacheLogger" />

	<!-- gemfire base cache configuration -->
	<gfe:cache id="cache" properties-ref="props"
		cache-xml-location="classpath:cache-server.xml" />

	<!-- this makes the cache server be a 'server' in the grid -->
	<gfe:cache-server id="advanced-config" auto-startup="true"
		cache-ref="cache" port="#{portGenerator.generatePort()}" />

	<!-- DB WRITE THROUGH REGION  -->
	<gfe:replicated-region id="RESORT_THRU" cache-ref="cache" > 
		<gfe:cache-listener ref="cache-logger" /> 
		<gfe:cache-loader ref="resort-cache-loader"/>
		<gfe:cache-writer ref="resort-cache-writer" /> 
	</gfe:replicated-region>

	<!-- DB WRITE BEHIND REGION -->
	<gfe:partitioned-region id="RESORT_BEHIND" cache-ref="cache" copies="1" initial-capacity="1024">
		<gfe:cache-listener ref="cache-logger" /> 
		<gfe:cache-loader ref="resort-cache-loader"/>
		<gfe:async-event-queue-ref bean="write-behind-queue"/>
	</gfe:partitioned-region>

	<gfe:async-event-queue id="write-behind-queue"
		cache-ref="cache" batch-size="1000" persistent="true" disk-store-ref="localStore"
		maximum-queue-memory="32">
		<gfe:async-event-listener>
			<bean class="demo.pivotal.datasync.ResortWriteBehind" />
		</gfe:async-event-listener>
	</gfe:async-event-queue>

	<!-- TEMPLATES -->
	<bean id="gtResortThru" class="org.springframework.data.gemfire.GemfireTemplate"
		p:region-ref="RESORT_THRU" />
		
	<bean id="gtResortBehind" class="org.springframework.data.gemfire.GemfireTemplate"
		p:region-ref="RESORT_BEHIND" />

	<!-- DATABASE READ THROUGH BEANS -->
	<bean id="resort-cache-loader" class="demo.pivotal.datasync.ResortCacheLoader" /> 

	<!-- DATABASE WRITE THROUGH BEANS -->
	<bean id="resort-cache-writer" class="demo.pivotal.datasync.ResortWriteThrough" />

	<!-- DB Datasource -->
	<bean class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" id="dataSource">
		<property name="driverClassName" value="org.h2.Driver" />
		<property name="url" value="jdbc:h2:tcp://localhost:8043/griddb" />
		<property name="username" value="sa" />
	</bean>

</beans>
